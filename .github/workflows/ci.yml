name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit:
    name: Audit
    runs-on: windows-2022
    if: false
    timeout-minutes: 60
    env:
      sonar_available: ${{ secrets.SONAR_TOKEN  != '' && 'true' || 'false' }}
      snyk_available: ${{ secrets.SNYK_TOKEN  != '' && 'true' || 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Audit
        run: |
          go mod download
          make audit

      - name: "[release] Snyk test"
        if: ${{ startsWith(github.ref, 'refs/tags/') && env.snyk_available == 'true' }}
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --org=${{ vars.SNYK_ORG_ID }} --severity-threshold=high --project-name=${{ github.repository }} --target-reference=${{ github.ref_name }}
          command: test

      - name: Download e2e coverage files
        uses: actions/download-artifact@v4
        with:
          path: e2e
          pattern: "e2e-coverage-*"
          merge-multiple: true

      - name: SonarCloud Scan
        if: ${{ env.sonar_available == 'true' }}
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: "[release] SonarCloud Quality Gate check"
        if: ${{ startsWith(github.ref, 'refs/tags/') && env.sonar_available == 'true' }}
        uses: sonarsource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    name: Build & Release
    runs-on: windows-2022
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build extension
        run: |
          go install github.com/goreleaser/goreleaser/v2@latest
          make release

      - name: Package
        run: |
          scripts\download-windivert.ps1 -DownloadDir ".\dist\windivert"
          $LATEST_ZIP = (Get-ChildItem -Path ..\dist -Filter "*.zip" -File | Sort-Object LastWriteTime -Descending | Select-Object -First 1).FullName
          Compress-Archive -Path dist\windivert -DestinationPath $LATEST_ZIP -Update
        shell: pwsh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            dist/*.zip
          retention-days: 7

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: true
          prerelease: ${{ !contains(github.ref, '-') }}
          fail_on_unmatched_files: true
          files: "dist/*.zip"
